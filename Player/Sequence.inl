/** @file *//********************************************************************************************************

                                                     Sequence.inl

						                    Copyright 2004, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Chess/Sequence.inl#8 $

	$NoKeywords: $

 ********************************************************************************************************************/

#pragma once


#include "Sequence.h"

/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline SequenceEntry::SequenceEntry()
	: m_PieceTypeId( -1 )
{
}

/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline SequenceEntry::SequenceEntry( Color color, PieceTypeId piece, Move const & move )
	:	m_Color( (int)color ),
		m_PieceTypeId( (int)piece ),
		m_FromRow( move.from().m_Row ),
		m_FromColumn( move.from().m_Column ),
		m_ToRow( move.to().m_Row ),
		m_ToColumn( move.to().m_Column )
{
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Move SequenceEntry::GetMove() const
{
	return Move( Position( m_FromRow, m_FromColumn ), Position( m_ToRow, m_ToColumn ) );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline Color SequenceEntry::GetColor() const
{
	return static_cast< Color >( m_Color );
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline PieceTypeId SequenceEntry::GetPieceTypeId() const
{
	return ( m_PieceTypeId != 7 ) ? static_cast< PieceTypeId >( m_PieceTypeId ) : PieceTypeId::INVALID;
}
